apiVersion: batch/v1
kind: CronJob
metadata:
  name: uptime-kuma-backup
  namespace: uptime-kuma
spec:
  schedule: "0 2 * * *"  # Zeitplan für die Ausführung des Jobs, hier täglich um 2:00 Uhr.
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: backup-container
            image: ubuntu:20.04  # Wählen Sie ein geeignetes Image
            command:
            - /bin/sh
            - -c
            - |
              # Installiere notwendige Pakete
              apt-get update && \
              apt-get install -y openssh-client nano && \
              # Erstelle das Verzeichnis /root/.ssh
              mkdir -p /root/.ssh && \
              # Kopiere den SSH-Schlüssel und setze die Berechtigungen
              cp /etc/ssh-key/id_rsa /root/.ssh/id_rsa && \
              chmod 600 /root/.ssh/id_rsa && \
              # Füge den Host-Schlüssel hinzu
              ssh-keyscan -H 192.168.1.204 >> /root/.ssh/known_hosts && \
              # Erstelle ein Archiv der Daten
              tar -czf /tmp/app-data-$(date +\%F).tar.gz -C /app/data . && \
              # Übertrage das Archiv via SCP
              scp -i /root/.ssh/id_rsa /tmp/app-data-$(date +\%F)-${CLUSTER_NAME}.tar.gz root@192.168.1.204:/srv/nfs/uptime-kuma/
            volumeMounts:
            - mountPath: /app/data
              name: app-data
            - mountPath: /etc/ssh-key
              name: ssh-key-volume
              readOnly: true  # Setzt das Volume schreibgeschützt
          restartPolicy: OnFailure
          volumes:
          - name: app-data
            persistentVolumeClaim:
              claimName: my-uptime-kuma-pvc  # Der PVC, der die Daten speichert
          - name: ssh-key-volume
            secret:
              secretName: ssh-key-secret  # Das Secret, das den SSH Private Key enthält
